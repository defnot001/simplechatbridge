plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
	id "org.jetbrains.kotlin.jvm" version "2.0.20"
	id "org.jetbrains.kotlin.plugin.serialization" version "2.0.20"
	id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	mavenCentral()
}

loom {
    splitEnvironmentSourceSets()

	mods {
		"simplechatbridge" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"
	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

	// modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"
	implementation(include "net.dv8tion:JDA:${project.jda_version}")
	implementation(include "club.minnced:discord-webhooks:${project.property("discord-webhooks_version")}")

	include "net.sf.trove4j:trove4j:3.0.3"
	include 'org.apache.commons:commons-collections4:4.4'
	include 'com.neovisionaries:nv-websocket-client:2.14'
	include 'com.squareup.okhttp3:okhttp:4.12.0'
	include 'com.squareup.okio:okio-jvm:3.6.0'
	include 'com.fasterxml.jackson.core:jackson-databind:2.16.0'
	include 'com.fasterxml.jackson.core:jackson-annotations:2.16.0'
	include 'com.fasterxml.jackson.core:jackson-core:2.16.0'
	include "org.json:json:20230618"
}

processResources {
	inputs.property "version", project.version
	inputs.property "mcversion", project.minecraft_version

	filesMatching("fabric.mod.json") {
		expand "version": project.version, "mcversion": project.minecraft_version_dependency
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = 17
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

remapJar {
	archiveVersion = "${project.version}+mc${project.minecraft_version}"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "NnYRKjHd"
	versionNumber = "${project.version}+mc${project.minecraft_version}"
	versionType = "release"
	uploadFile = remapJar
	gameVersions = project.minecraft_version_list.split('\\s*,\\s*').toList()
	loaders = ["fabric", "quilt"]
	dependencies {
		required.project "fabric-api"
		required.project "fabric-language-kotlin"
	}
}